services:
  ##############################################
  # NGINX
  ##############################################
  nginx:
    image: nginx:alpine
    restart: ${RESTART}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ../projects:/var/www/html
    networks:
      - kacoonet
    depends_on:
      - php83
      - php80
      - php74
      - go
      - node20

  ##############################################
  # GOLANG
  ##############################################
  go:
    build:
      context: go
      dockerfile: Dockerfile
      args:
        - GOLANG_VERSION=${GOLANG_VERSION}
    volumes:
      - ../projects/go:/usr/src/app
    tty: true
    networks:
      - kacoonet
    restart: ${RESTART}
    ports:
      - "8000:8080"

  ##############################################
  # PHP-FPM 8.3
  ##############################################
  php83:
    build:
      context: php83
      dockerfile: Dockerfile.alpine
    restart: ${RESTART}
    volumes:
      - ../projects:/var/www/html
      - ./php83/php.ini:/usr/local/etc/php/php.ini
      - ./php83/crontab/jobs:/etc/crontabs/jobs
    networks:
      - kacoonet
    environment:
      - PHP_MEMORY_LIMIT=512M
    ports:
      - "5183:5183"
      - "8083:8000"

  ##############################################
  # PHP-FPM 8.0.3
  ##############################################
  php80:
    build:
      context: php80
      dockerfile: Dockerfile.alpine
    restart: ${RESTART}
    volumes:
      - ../projects:/var/www/html
      - ./php80/php.ini:/usr/local/etc/php/php.ini
      - ./php80/crontab/jobs:/etc/crontabs/jobs
    networks:
      - kacoonet
    environment:
      - PHP_MEMORY_LIMIT=512M
    ports:
      - "5180:5180"
      - "8080:8000"

  ##############################################
  # PHP-FPM 7.4
  ##############################################
  php74:
    build:
      context: php74
      dockerfile: Dockerfile.alpine
    restart: ${RESTART}
    volumes:
      - ../projects:/var/www/html
      - ./php74/php.ini:/usr/local/etc/php/php.ini
      - ./php74/crontab/jobs:/etc/crontabs/jobs
    networks:
      - kacoonet
    environment:
      - PHP_MEMORY_LIMIT=512M
    ports:
      - "5174:5174"
      - "8074:8000"

  ##############################################
  # NODEJS 20
  ##############################################
  node20:
    build:
      context: node20
      dockerfile: Dockerfile
    restart: ${RESTART}
    volumes:
      - ../projects:/var/www/html
      - ./node20/ecosystem.config.js:/home/pm2/ecosystem.config.js # Mount PM2 Config
    networks:
      - kacoonet
    tty: true
    ports:
      - "3000:3000"
      - "5173:5173"

  ##############################################
  # MYSQL 8.0
  ##############################################
  mysql:
    image: mysql:8.0
    restart: ${RESTART}
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - kacoonet
    volumes:
      - mysql_data:/var/lib/mysql

  ##############################################
  # POSTGRES 13
  ##############################################
  postgres:
    image: postgres:13
    restart: ${RESTART}
    networks:
      - kacoonet
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    ports:
      - "${POSTGRES_PORT}:5432"

  ##############################################
  # PHPMYADMIN
  ##############################################
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: ${RESTART}
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    networks:
      - kacoonet
    depends_on:
      - mysql

  ##############################################
  # PGADMIN
  ##############################################
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: ${RESTART}
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} # Email default untuk login
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} # Password default untuk login
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - kacoonet
    depends_on:
      - postgres

  ##############################################
  # MINIO
  ##############################################
  minio:
    image: minio/minio
    restart: ${RESTART}
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_DASHBOARD_PORT}:9001"
    volumes:
      - minio_data:/data
    networks:
      - kacoonet

  ##############################################
  # REDIS
  ##############################################
  redis:
    image: redis:7.2
    restart: ${RESTART}
    volumes:
      - ./redis/config:/usr/local/etc/redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - kacoonet

  ##############################################
  # SOKETI
  ##############################################
  soketi:
    image: quay.io/soketi/soketi:1.4-16-debian
    restart: ${RESTART}
    environment:
      SOKETI_DEBUG: ${SOKETI_DEBUG}
      SOKETI_METRICS_SERVER_PORT: ${SOKETI_METRICS_SERVER_PORT}
      SOKETI_DEFAULT_APP_ID: ${SOKETI_DEFAULT_APP_ID}
      SOKETI_DEFAULT_APP_KEY: ${SOKETI_DEFAULT_APP_KEY}
      SOKETI_DEFAULT_APP_SECRET: ${SOKETI_DEFAULT_APP_SECRET}
    ports:
      - "6001:6001"
      - "9601:9601"
    networks:
      - kacoonet

  ##############################################
  # MAILPIT
  ##############################################
  mailpit:
    image: axllent/mailpit
    restart: ${RESTART}
    ports:
      - "${MAILPIT_SMTP_PORT}:8025"
      - "${MAILPIT_DASHBOARD_PORT}:1025"
    networks:
      - kacoonet

# NETWORKS
networks:
  kacoonet:
    driver: bridge

# VOLUMES
volumes:
  mysql_data:
  postgres_data:
  minio_data:
